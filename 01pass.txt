
-------------------------------------------Assignment-1---------------------------------------

Pass1:-

import java.util.*;
import java.io.*;
public class pass1
{
	static int address=0;
	static int sadd[]=new int[10];
        static int ladd[]=new int[10];
        public static void main(String args[])
        {

                BufferedReader br;
                OutputStream oo;
                String input=null;
                
                String IS[]={"ADD","SUB","MUL","MOV"};
                String UserReg[]={"AREG","BREG","CREG","DREG"};
                String AD[]={"START","END"};
                String DL[]={"DC","DS"};
                int lc=0;
                int scount=0,lcount=0;
                int flag=0,flag2=0,stored=0;
                
                String tokens[]=new String[30];
                String tt=null;
                
                String sv[]=new String[10];
                String lv[]=new String[10];
                
               
                
                
           
                try
                {
                        br=new BufferedReader(new FileReader("initial.txt"));
                        File f = new File("IM.txt");
                        File f1 = new File("ST.txt");
                        File f2 = new File("LT.txt");
                        PrintWriter p = new PrintWriter(f);
                        PrintWriter p1 = new PrintWriter(f1);
                        PrintWriter p2 = new PrintWriter(f2);
			int k=0,l=0;
                        while ((input = br.readLine()) != null)
                        {
                                 StringTokenizer st = new StringTokenizer(input," "); 
                                 while (st.hasMoreTokens())   
                                             {
                                                  tt=st.nextToken();  
                                                      //System.out.println(tt);        
                                                              
                                                               if(tt.matches("\\d*")&& tt.length() > 2)
                                                               {
                                                                     lc=Integer.parseInt(tt);
                                                                     p.println(lc);
                                                                     address=lc-1; 
                                                               }
                                                               else
                                                               {
                                                               		for(int i=0;i<AD.length;i++)
				                                              {
				                                                       if(tt.equals(AD[i]))
				                                                       {
				                                                               p.print("AD "+(i+1)+" ");
				                                                       }
				                                                       
				                                               } 
				                                             
				                                        for(int i=0;i<IS.length;i++)
                                                               		{
		                                                               if(tt.equals(IS[i]))
		                                                               {
		                                                                       p.print("IS "+(i+1)+" ");
		                                                                       
		                                                               }
                                                                       } 
                                                                       for(int i=0;i<UserReg.length;i++)
                                                               		{
		                                                               if(tt.equals(UserReg[i]))
		                                                               {
		                                                                       p.print((i+1)+" ");
		                                                                       flag=1;
		                                                               }
		                                                               
                                                                       } 	
                                                                       for(int i=0;i<DL.length;i++)
                                                               		{
		                                                               if(tt.equals(DL[i]))
		                                                               {
		                                                                       p.print("DL "+(i+1)+" ");
		                                                               }
                                                                       }
                                                                       if(tt.length()==1 && !(st.hasMoreTokens()) && flag==1)
                                                                       {
                                                                        
		                                                                                if ( Arrays.asList(sv).contains(tt) ) 
		                                                                                {
		                                                                                        
		                                                                                        for(int i=0;i<scount;i++)
		                                                                                        {
		                                                                                        	
		                                                                                               if(sv[i].equals(tt))
		                                                                                               	{
		                                                                                               		p.print("S"+i);	 
		                                                                                               		flag2=1;
		                                                                                               	}
		                                                                                               	else
		                                                                                               	{
		                                                                                               		flag2=0;
		                                                                                               	}
		                                                                                        }
		                                                                                       
		                                                                                }
		                                                                                else
		                                                                                {
		                                                                                	p.print("S"+scount);
		                                                                       		sv[scount]=tt;
		                                                                       		flag2=1;
		                                                                       		scount++;
		                                                                                }
                                                            
                                                                       }
                                                                     
                                                                       if(tt.length()==1 && (st.hasMoreTokens()))
                                                                       {
                                                                       		p.print(tt+" ");
                                                                       		sadd[k]=address;k++;
                                                                       		
                                                                       }
                                                                       
                                                                       
                                                                       if(tt.charAt(0)=='=')
                                                                       {
                                                                       		p.print("L"+lcount);
                                                                       		lv[lcount]=tt;
                                                                       		lcount++;
                                                                       }
                                                                       if(!st.hasMoreTokens())
		                                                               {
		                                                               		p.println();
		                                                               }	
		                                                               
		                                                       if(tt.equals("DS"))
		                                                       {
		                                                       		int a=Integer.parseInt(st.nextToken());
	                                                       			address=address+a-1;
		                                                       		p.println();
		                                                       }
		                                                       
                                                               }
                                                               
                                                        
                                                  
                                       }
                                      //System.out.println();
                                      address++;
                        } p.close();
                        address--;
                        
                        for(int i=0;i<lcount;i++)
                        {
                        	ladd[i]=address;
                        	address++;
                        }
                        
                        
                        
                        for(int i=0;i<scount;i++)
                        {
                        	p1.println(i+"\t"+sv[i]+"\t"+sadd[i]);
                        }p1.close();
                        
                        for(int i=0;i<lcount;i++)
                        {
                        	p2.println(i+"\t"+lv[i]+"\t"+ladd[i]);
                        }p2.close();
                }
                catch(Exception e)
                {
                        e.printStackTrace();
                }
        }
       
} 


Input:-

initial.txt

START 100
MOV AREG A
MOV BREG B
MOV CREG =2
MOV DREG =3
ADD AREG BREG
SUB AREG A
A DC 05
B DS 03
END


Output:-

Symbol Table
ST.txt

0	A	106
1	B	107

Literal Table
LT.txt

0	=2	110
1	=3	111

Intermediate Code
IM.txt

AD 1 100
IS 4 1 S0
IS 4 2 S1
IS 4 3 L0
IS 4 4 L1
IS 1 1 2 
IS 2 1 S0
A DL 1 
B DL 2 
AD 2 


Pass 2:-

import java.util.*;
import java.io.*;
class pass2
{
        public static void main(String args[])
        {
                String value=null;
                BufferedReader br,br1,br2;
             
                String input=null;
                String t=null;
                String t1=null;
                String ss=null,ll=null;
                String pvalue,address;
                try
                {
                        br=new BufferedReader(new FileReader("IM.txt"));
                        File f=new File("Output.txt");
                        PrintWriter p=new PrintWriter(f);
                        
                        while((input=br.readLine())!=null)
                        {
                        
                        
                                StringTokenizer st=new StringTokenizer(input," ");
                                 while (st.hasMoreTokens()) 
                                 {
                                        t=st.nextToken();
                      //  System.out.println(t);                
                                        if(t.equals("AD") || t.equals("IS") || t.equals("DL"))
                                        {
                                                p.print(t+" ");
                                        }
                                        else if(t.matches("\\d*")&& t.length() > 0 && st.hasMoreTokens())
                                        {
                                                p.print(t+" ");
                                        }
                                        
                                        else if(t.matches("\\d*")&& t.length() > 0 && !(st.hasMoreTokens()))
                                        {
                                                p.println(t);
                                        }
                                        else
                                        {
                                        	br1=new BufferedReader(new FileReader("ST.txt"));
                        			br2=new BufferedReader(new FileReader("LT.txt"));
                                                if(t.charAt(0)=='S')
                                                {
		                                        char a;
		                                        int aa;
		                                        a=t.charAt(1);
		                                        aa = Character.getNumericValue(a);
		                                                while((t1=br1.readLine())!=null)
		                                                {
		                                                        StringTokenizer st1=new StringTokenizer(t1,"\t");
		                                                        ss=st1.nextToken();
		                                                        int index=Integer.parseInt(ss);
		                                                        if(index==aa)
		                                                        {
		                                                        	pvalue=st1.nextToken();
		                                                                address=st1.nextToken();
		                                                                p.println(address); 
		                                                        }
		                                                }
                                                }
                                                else if(t.charAt(0)=='L')
                                                {
                                                        char a;
		                                        int aa;
		                                        a=t.charAt(1);
		                                        aa = Character.getNumericValue(a);
		                                                while((t1=br2.readLine())!=null)
		                                                {
		                                                        StringTokenizer st2=new StringTokenizer(t1,"\t");
		                                                        ss=st2.nextToken();
		                                                        int index=Integer.parseInt(ss);
		                                                        if(index==aa)
		                                                        {
		                                                        	pvalue=st2.nextToken();
		                                                                address=st2.nextToken();
		                                                                p.println(address); 
		                                                        }
		                                                        
		                                                }
                                                }
                                                else
                                                {
                                                        p.print(t+" ");
                                                }
                                        }
                                        
                                        
                                        
                                }
                        }p.close();
                }
                catch(Exception e)
                {
                        e.printStackTrace();
                }
                
        }
}


Input:-

initial.txt

START 100
MOV AREG A
MOV BREG B
MOV CREG =2
MOV DREG =3
ADD AREG BREG
SUB AREG A
A DC 05
B DS 03
END

Symbol Table
ST.txt

0	A	106
1	B	107

Literal Table 
LT.txt

0	=2	110
1	=3	111

Intermediate Code
IM.txt

AD 1 100
IS 4 1 S0
IS 4 2 S1
IS 4 3 L0
IS 4 4 L1
IS 1 1 2 
IS 2 1 S0
A DL 1 
B DL 2 
AD 2 


Output:-

Output.txt

AD 1 100
IS 4 1 106
IS 4 2 107
IS 4 3 110
IS 4 4 111
IS 1 1 2
IS 2 1 106
A DL 1
B DL 2
AD 2



